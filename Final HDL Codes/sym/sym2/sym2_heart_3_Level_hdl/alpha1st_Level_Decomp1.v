// -------------------------------------------------------------
// 
// File Name: hdlsrc\final_heart_sym2_level3_fixed\alpha1st_Level_Decomp1.v
// Created: 2024-04-17 00:25:34
// 
// Generated by MATLAB 9.10 and HDL Coder 3.18
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: alpha1st_Level_Decomp1
// Source Path: final_heart_sym2_level3_fixed/DWT_sym2_3_Level/1st_Level_Decomp1
// Hierarchy Level: 1
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module alpha1st_Level_Decomp1
          (clk,
           reset,
           enb,
           In_E,
           In_O,
           Out_HiD,
           Out_LoD);


  input   clk;
  input   reset;
  input   enb;
  input   signed [15:0] In_E;  // sfix16_En22
  input   signed [15:0] In_O;  // sfix16_En22
  output  signed [15:0] Out_HiD;  // sfix16_En26
  output  [15:0] Out_LoD;  // ufix16_En24


  wire signed [15:0] HiD_Even_out1;  // sfix16_En15
  wire signed [15:0] HiD_Odd_out1;  // sfix16_En23
  wire signed [15:0] Add_add_cast;  // sfix16_En23
  wire signed [15:0] Add_add_temp;  // sfix16_En23
  wire signed [15:0] Add_out1;  // sfix16_En26
  wire signed [32:0] Gain_mul_temp;  // sfix33_En42
  wire signed [31:0] Gain_cast;  // sfix32_En42
  wire signed [15:0] Gain_out1;  // sfix16_En26
  reg signed [15:0] Delay1_out1;  // sfix16_En26
  wire signed [15:0] LoD_Even_out1;  // sfix16_En23
  wire [15:0] LoD_Odd_out1;  // ufix16_En24
  wire signed [15:0] Add1_add_cast;  // sfix16_En22
  wire signed [15:0] Add1_add_cast_1;  // sfix16_En22
  wire signed [15:0] Add1_add_temp;  // sfix16_En22
  wire [15:0] Add1_out1;  // ufix16_En23
  wire [31:0] Gain1_mul_temp;  // ufix32_En39
  wire [15:0] Gain1_out1;  // ufix16_En24
  reg [15:0] Delay2_out1;  // ufix16_En24


  HiD_Even_block u_HiD_Even (.clk(clk),
                             .reset(reset),
                             .enb(enb),
                             .In_HiD_e(In_E),  // sfix16_En22
                             .Out_HiD_e(HiD_Even_out1)  // sfix16_En15
                             );
  HiD_Odd_block u_HiD_Odd (.clk(clk),
                           .reset(reset),
                           .enb(enb),
                           .In_HiD_o(In_O),  // sfix16_En22
                           .Out_HiD_o(HiD_Odd_out1)  // sfix16_En23
                           );
  assign Add_add_cast = {HiD_Even_out1[7:0], 8'b00000000};
  assign Add_add_temp = Add_add_cast + HiD_Odd_out1;
  assign Add_out1 = {Add_add_temp[12:0], 3'b000};


  assign Gain_mul_temp = 17'sb01001100100000100 * Add_out1;
  assign Gain_cast = Gain_mul_temp[31:0];
  assign Gain_out1 = Gain_cast[31:16];


  always @(posedge clk)
    begin : Delay1_process
      if (reset == 1'b1) begin
        Delay1_out1 <= 16'sb0000000000000000;
      end
      else begin
        if (enb) begin
          Delay1_out1 <= Gain_out1;
        end
      end
    end


  assign Out_HiD = Delay1_out1;

  LoD_Even_block u_LoD_Even (.clk(clk),
                             .reset(reset),
                             .enb(enb),
                             .In_LoD_e(In_E),  // sfix16_En22
                             .Out_LoD_e(LoD_Even_out1)  // sfix16_En23
                             );
  LoD_Odd_block u_LoD_Odd (.clk(clk),
                           .reset(reset),
                           .enb(enb),
                           .In_LoD_o(In_O),  // sfix16_En22
                           .Out_LoD_o(LoD_Odd_out1)  // ufix16_En24
                           );
  assign Add1_add_cast = {LoD_Even_out1[15], LoD_Even_out1[15:1]};
  assign Add1_add_cast_1 = {2'b0, LoD_Odd_out1[15:2]};
  assign Add1_add_temp = Add1_add_cast + Add1_add_cast_1;
  assign Add1_out1 = {Add1_add_temp[14:0], 1'b0};


  assign Gain1_mul_temp = 16'b1001100100000100 * Add1_out1;
  assign Gain1_out1 = Gain1_mul_temp[30:15];


  always @(posedge clk)
    begin : Delay2_process
      if (reset == 1'b1) begin
        Delay2_out1 <= 16'b0000000000000000;
      end
      else begin
        if (enb) begin
          Delay2_out1 <= Gain1_out1;
        end
      end
    end


  assign Out_LoD = Delay2_out1;

endmodule  // alpha1st_Level_Decomp1

