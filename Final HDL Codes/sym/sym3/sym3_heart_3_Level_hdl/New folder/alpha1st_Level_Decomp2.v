// -------------------------------------------------------------
// 
// File Name: hdl_prj\hdlsrc\final_heart_sym3_3_Level_fixed\alpha1st_Level_Decomp2.v
// Created: 2024-04-17 18:52:00
// 
// Generated by MATLAB 9.10 and HDL Coder 3.18
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: alpha1st_Level_Decomp2
// Source Path: final_heart_sym3_3_Level_fixed/DWT_sym3_3_Level/1st_Level_Decomp2
// Hierarchy Level: 1
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module alpha1st_Level_Decomp2
          (clk,
           reset,
           enb,
           In_E,
           In_O,
           Out_HiD,
           Out_LoD);


  input   clk;
  input   reset;
  input   enb;
  input   signed [15:0] In_E;  // sfix16_En24
  input   signed [15:0] In_O;  // sfix16_En24
  output  signed [15:0] Out_HiD;  // sfix16_En27
  output  signed [15:0] Out_LoD;  // sfix16_En24


  wire [15:0] kconst;  // ufix16_En16
  reg [15:0] kconst_1;  // ufix16_En16
  wire signed [15:0] HiD_Even_out1;  // sfix16_En24
  wire signed [15:0] HiD_Odd_out1;  // sfix16_En24
  wire signed [15:0] Add_add_temp;  // sfix16_En24
  wire signed [15:0] Add_out1;  // sfix16_En26
  reg signed [15:0] Add_out1_1;  // sfix16_En26
  wire signed [16:0] Gain_cast;  // sfix17_En16
  wire signed [32:0] Gain_mul_temp;  // sfix33_En42
  wire signed [31:0] Gain_cast_1;  // sfix32_En42
  wire signed [15:0] Gain_out1;  // sfix16_En27
  reg signed [15:0] Gain_out1_1;  // sfix16_En27
  wire [15:0] kconst_2;  // ufix16_En16
  reg [15:0] kconst_3;  // ufix16_En16
  wire signed [15:0] LoD_Even_out1;  // sfix16_En24
  wire signed [15:0] LoD_Odd_out1;  // sfix16_En24
  wire signed [15:0] Add1_add_cast;  // sfix16_En23
  wire signed [15:0] Add1_add_cast_1;  // sfix16_En23
  wire signed [15:0] Add1_out1;  // sfix16_En23
  reg signed [15:0] Add1_out1_1;  // sfix16_En23
  wire signed [16:0] Gain1_cast;  // sfix17_En16
  wire signed [32:0] Gain1_mul_temp;  // sfix33_En39
  wire signed [31:0] Gain1_cast_1;  // sfix32_En39
  wire signed [15:0] Gain1_out1;  // sfix16_En24
  reg signed [15:0] Gain1_out1_1;  // sfix16_En24


  assign kconst = 16'b1000100111111111;



  always @(posedge clk)
    begin : HwModeRegister_process
      if (reset == 1'b1) begin
        kconst_1 <= 16'b0000000000000000;
      end
      else begin
        if (enb) begin
          kconst_1 <= kconst;
        end
      end
    end



  HiD_Even_block1 u_HiD_Even (.clk(clk),
                              .reset(reset),
                              .enb(enb),
                              .In_HiD_e(In_E),  // sfix16_En24
                              .Out_HiD_e(HiD_Even_out1)  // sfix16_En24
                              );
  HiD_Odd_block1 u_HiD_Odd (.clk(clk),
                            .reset(reset),
                            .enb(enb),
                            .In_HiD_o(In_O),  // sfix16_En24
                            .Out_HiD_o(HiD_Odd_out1)  // sfix16_En24
                            );
  assign Add_add_temp = HiD_Even_out1 + HiD_Odd_out1;
  assign Add_out1 = {Add_add_temp[13:0], 2'b00};


  always @(posedge clk)
    begin : HwModeRegister1_process
      if (reset == 1'b1) begin
        Add_out1_1 <= 16'sb0000000000000000;
      end
      else begin
        if (enb) begin
          Add_out1_1 <= Add_out1;
        end
      end
    end



  assign Gain_cast = {1'b0, kconst_1};
  assign Gain_mul_temp = Gain_cast * Add_out1_1;
  assign Gain_cast_1 = Gain_mul_temp[31:0];
  assign Gain_out1 = Gain_cast_1[30:15];


  always @(posedge clk)
    begin : PipelineRegister_process
      if (reset == 1'b1) begin
        Gain_out1_1 <= 16'sb0000000000000000;
      end
      else begin
        if (enb) begin
          Gain_out1_1 <= Gain_out1;
        end
      end
    end



  assign Out_HiD = Gain_out1_1;

  assign kconst_2 = 16'b1000100111111111;



  always @(posedge clk)
    begin : HwModeRegister2_process
      if (reset == 1'b1) begin
        kconst_3 <= 16'b0000000000000000;
      end
      else begin
        if (enb) begin
          kconst_3 <= kconst_2;
        end
      end
    end



  LoD_Even_block1 u_LoD_Even (.clk(clk),
                              .reset(reset),
                              .enb(enb),
                              .In_LoD_e(In_E),  // sfix16_En24
                              .Out_LoD_e(LoD_Even_out1)  // sfix16_En24
                              );
  LoD_Odd_block1 u_LoD_Odd (.clk(clk),
                            .reset(reset),
                            .enb(enb),
                            .In_LoD_o(In_O),  // sfix16_En24
                            .Out_LoD_o(LoD_Odd_out1)  // sfix16_En24
                            );
  assign Add1_add_cast = {LoD_Even_out1[15], LoD_Even_out1[15:1]};
  assign Add1_add_cast_1 = {LoD_Odd_out1[15], LoD_Odd_out1[15:1]};
  assign Add1_out1 = Add1_add_cast + Add1_add_cast_1;


  always @(posedge clk)
    begin : HwModeRegister3_process
      if (reset == 1'b1) begin
        Add1_out1_1 <= 16'sb0000000000000000;
      end
      else begin
        if (enb) begin
          Add1_out1_1 <= Add1_out1;
        end
      end
    end



  assign Gain1_cast = {1'b0, kconst_3};
  assign Gain1_mul_temp = Gain1_cast * Add1_out1_1;
  assign Gain1_cast_1 = Gain1_mul_temp[31:0];
  assign Gain1_out1 = Gain1_cast_1[30:15];


  always @(posedge clk)
    begin : PipelineRegister1_process
      if (reset == 1'b1) begin
        Gain1_out1_1 <= 16'sb0000000000000000;
      end
      else begin
        if (enb) begin
          Gain1_out1_1 <= Gain1_out1;
        end
      end
    end



  assign Out_LoD = Gain1_out1_1;

endmodule  // alpha1st_Level_Decomp2

