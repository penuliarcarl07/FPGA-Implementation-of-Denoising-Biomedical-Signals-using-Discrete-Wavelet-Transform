-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\db3_2_Level_fixdt\Median2.vhd
-- Created: 2024-04-17 21:48:34
-- 
-- Generated by MATLAB 9.10 and HDL Coder 3.18
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: Median2
-- Source Path: db3_2_Level_fixdt/DWT_db3_2_Level/Threshold_Estimator/Median2
-- Hierarchy Level: 2
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY Median2 IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        Signal_w3                         :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16_En27
        Median                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- ufix16_En27
        );
END Median2;


ARCHITECTURE rtl OF Median2 IS

  -- Component Declarations
  COMPONENT Data_Sorter1
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          Signal1                         :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16_En27
          Signal2                         :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16_En27
          High_Data                       :   OUT   std_logic_vector(15 DOWNTO 0);  -- ufix16_En27
          Low_Data                        :   OUT   std_logic_vector(15 DOWNTO 0)  -- ufix16_En27
          );
  END COMPONENT;

  COMPONENT Data_Sorter2
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          Signal1                         :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16_En27
          Signal2                         :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16_En27
          High_Data                       :   OUT   std_logic_vector(15 DOWNTO 0);  -- ufix16_En27
          Low_Data                        :   OUT   std_logic_vector(15 DOWNTO 0)  -- ufix16_En27
          );
  END COMPONENT;

  COMPONENT Data_Sorter5
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          Signal1                         :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16_En27
          Signal2                         :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16_En27
          High_Data                       :   OUT   std_logic_vector(15 DOWNTO 0);  -- ufix16_En27
          Low_Data                        :   OUT   std_logic_vector(15 DOWNTO 0)  -- ufix16_En27
          );
  END COMPONENT;

  COMPONENT Data_Sorter8
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          Signal1                         :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16_En27
          Signal2                         :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16_En27
          High_Data                       :   OUT   std_logic_vector(15 DOWNTO 0);  -- ufix16_En27
          Low_Data                        :   OUT   std_logic_vector(15 DOWNTO 0)  -- ufix16_En27
          );
  END COMPONENT;

  COMPONENT Data_Sorter3
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          Signal1                         :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16_En27
          Signal2                         :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16_En27
          High_Data                       :   OUT   std_logic_vector(15 DOWNTO 0);  -- ufix16_En27
          Low_Data                        :   OUT   std_logic_vector(15 DOWNTO 0)  -- ufix16_En27
          );
  END COMPONENT;

  COMPONENT Data_Sorter6
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          Signal1                         :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16_En27
          Signal2                         :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16_En27
          High_Data                       :   OUT   std_logic_vector(15 DOWNTO 0);  -- ufix16_En27
          Low_Data                        :   OUT   std_logic_vector(15 DOWNTO 0)  -- ufix16_En27
          );
  END COMPONENT;

  COMPONENT Data_Sorter9
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          Signal1                         :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16_En27
          Signal2                         :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16_En27
          High_Data                       :   OUT   std_logic_vector(15 DOWNTO 0);  -- ufix16_En27
          Low_Data                        :   OUT   std_logic_vector(15 DOWNTO 0)  -- ufix16_En27
          );
  END COMPONENT;

  COMPONENT Data_Sorter12
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          Signal1                         :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16_En27
          Signal2                         :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16_En27
          High_Data                       :   OUT   std_logic_vector(15 DOWNTO 0);  -- ufix16_En27
          Low_Data                        :   OUT   std_logic_vector(15 DOWNTO 0)  -- ufix16_En27
          );
  END COMPONENT;

  COMPONENT Data_Sorter15
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          Signal1                         :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16_En27
          Signal2                         :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16_En27
          Low_Data                        :   OUT   std_logic_vector(15 DOWNTO 0)  -- ufix16_En27
          );
  END COMPONENT;

  COMPONENT Data_Sorter4
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          Signal1                         :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16_En27
          Signal2                         :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16_En27
          High_Data                       :   OUT   std_logic_vector(15 DOWNTO 0);  -- ufix16_En27
          Low_Data                        :   OUT   std_logic_vector(15 DOWNTO 0)  -- ufix16_En27
          );
  END COMPONENT;

  COMPONENT Data_Sorter7
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          Signal1                         :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16_En27
          Signal2                         :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16_En27
          High_Data                       :   OUT   std_logic_vector(15 DOWNTO 0);  -- ufix16_En27
          Low_Data                        :   OUT   std_logic_vector(15 DOWNTO 0)  -- ufix16_En27
          );
  END COMPONENT;

  COMPONENT Data_Sorter10
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          Signal1                         :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16_En27
          Signal2                         :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16_En27
          High_Data                       :   OUT   std_logic_vector(15 DOWNTO 0);  -- ufix16_En27
          Low_Data                        :   OUT   std_logic_vector(15 DOWNTO 0)  -- ufix16_En27
          );
  END COMPONENT;

  COMPONENT Data_Sorter13
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          Signal1                         :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16_En27
          Signal2                         :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16_En27
          High_Data                       :   OUT   std_logic_vector(15 DOWNTO 0);  -- ufix16_En27
          Low_Data                        :   OUT   std_logic_vector(15 DOWNTO 0)  -- ufix16_En27
          );
  END COMPONENT;

  COMPONENT Data_Sorter16
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          Signal1                         :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16_En27
          Signal2                         :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16_En27
          High_Data                       :   OUT   std_logic_vector(15 DOWNTO 0);  -- ufix16_En27
          Low_Data                        :   OUT   std_logic_vector(15 DOWNTO 0)  -- ufix16_En27
          );
  END COMPONENT;

  COMPONENT Data_Sorter19
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          Signal1                         :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16_En27
          Signal2                         :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16_En27
          Low_Data                        :   OUT   std_logic_vector(15 DOWNTO 0)  -- ufix16_En27
          );
  END COMPONENT;

  COMPONENT Data_Sorter11
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          Signal1                         :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16_En27
          Signal2                         :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16_En27
          High_Data                       :   OUT   std_logic_vector(15 DOWNTO 0);  -- ufix16_En27
          Low_Data                        :   OUT   std_logic_vector(15 DOWNTO 0)  -- ufix16_En27
          );
  END COMPONENT;

  COMPONENT Data_Sorter14
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          Signal1                         :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16_En27
          Signal2                         :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16_En27
          High_Data                       :   OUT   std_logic_vector(15 DOWNTO 0);  -- ufix16_En27
          Low_Data                        :   OUT   std_logic_vector(15 DOWNTO 0)  -- ufix16_En27
          );
  END COMPONENT;

  COMPONENT Data_Sorter17
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          Signal1                         :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16_En27
          Signal2                         :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16_En27
          High_Data                       :   OUT   std_logic_vector(15 DOWNTO 0);  -- ufix16_En27
          Low_Data                        :   OUT   std_logic_vector(15 DOWNTO 0)  -- ufix16_En27
          );
  END COMPONENT;

  COMPONENT Data_Sorter20
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          Signal1                         :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16_En27
          Signal2                         :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16_En27
          High_Data                       :   OUT   std_logic_vector(15 DOWNTO 0);  -- ufix16_En27
          Low_Data                        :   OUT   std_logic_vector(15 DOWNTO 0)  -- ufix16_En27
          );
  END COMPONENT;

  COMPONENT Data_Sorter22
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          Signal1                         :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16_En27
          Signal2                         :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16_En27
          Low_Data                        :   OUT   std_logic_vector(15 DOWNTO 0)  -- ufix16_En27
          );
  END COMPONENT;

  COMPONENT Data_Sorter18
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          Signal1                         :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16_En27
          Signal2                         :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16_En27
          High_Data                       :   OUT   std_logic_vector(15 DOWNTO 0)  -- ufix16_En27
          );
  END COMPONENT;

  COMPONENT Data_Sorter21
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          Signal1                         :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16_En27
          Signal2                         :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16_En27
          High_Data                       :   OUT   std_logic_vector(15 DOWNTO 0)  -- ufix16_En27
          );
  END COMPONENT;

  COMPONENT Data_Sorter23
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          Signal1                         :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16_En27
          Signal2                         :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16_En27
          High_Data                       :   OUT   std_logic_vector(15 DOWNTO 0)  -- ufix16_En27
          );
  END COMPONENT;

  COMPONENT Data_Sorter24
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          Signal1                         :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16_En27
          Signal2                         :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16_En27
          High_Data                       :   OUT   std_logic_vector(15 DOWNTO 0);  -- ufix16_En27
          Low_Data                        :   OUT   std_logic_vector(15 DOWNTO 0)  -- ufix16_En27
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : Data_Sorter1
    USE ENTITY work.Data_Sorter1(rtl);

  FOR ALL : Data_Sorter2
    USE ENTITY work.Data_Sorter2(rtl);

  FOR ALL : Data_Sorter5
    USE ENTITY work.Data_Sorter5(rtl);

  FOR ALL : Data_Sorter8
    USE ENTITY work.Data_Sorter8(rtl);

  FOR ALL : Data_Sorter3
    USE ENTITY work.Data_Sorter3(rtl);

  FOR ALL : Data_Sorter6
    USE ENTITY work.Data_Sorter6(rtl);

  FOR ALL : Data_Sorter9
    USE ENTITY work.Data_Sorter9(rtl);

  FOR ALL : Data_Sorter12
    USE ENTITY work.Data_Sorter12(rtl);

  FOR ALL : Data_Sorter15
    USE ENTITY work.Data_Sorter15(rtl);

  FOR ALL : Data_Sorter4
    USE ENTITY work.Data_Sorter4(rtl);

  FOR ALL : Data_Sorter7
    USE ENTITY work.Data_Sorter7(rtl);

  FOR ALL : Data_Sorter10
    USE ENTITY work.Data_Sorter10(rtl);

  FOR ALL : Data_Sorter13
    USE ENTITY work.Data_Sorter13(rtl);

  FOR ALL : Data_Sorter16
    USE ENTITY work.Data_Sorter16(rtl);

  FOR ALL : Data_Sorter19
    USE ENTITY work.Data_Sorter19(rtl);

  FOR ALL : Data_Sorter11
    USE ENTITY work.Data_Sorter11(rtl);

  FOR ALL : Data_Sorter14
    USE ENTITY work.Data_Sorter14(rtl);

  FOR ALL : Data_Sorter17
    USE ENTITY work.Data_Sorter17(rtl);

  FOR ALL : Data_Sorter20
    USE ENTITY work.Data_Sorter20(rtl);

  FOR ALL : Data_Sorter22
    USE ENTITY work.Data_Sorter22(rtl);

  FOR ALL : Data_Sorter18
    USE ENTITY work.Data_Sorter18(rtl);

  FOR ALL : Data_Sorter21
    USE ENTITY work.Data_Sorter21(rtl);

  FOR ALL : Data_Sorter23
    USE ENTITY work.Data_Sorter23(rtl);

  FOR ALL : Data_Sorter24
    USE ENTITY work.Data_Sorter24(rtl);

  -- Signals
  SIGNAL Signal_w3_unsigned               : unsigned(15 DOWNTO 0);  -- ufix16_En27
  SIGNAL Delay2_out1                      : unsigned(15 DOWNTO 0);  -- ufix16_En27
  SIGNAL Data_Sorter1_out1                : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Data_Sorter1_out2                : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Delay3_out1                      : unsigned(15 DOWNTO 0);  -- ufix16_En27
  SIGNAL Delay4_out1                      : unsigned(15 DOWNTO 0);  -- ufix16_En27
  SIGNAL Data_Sorter2_out1                : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Data_Sorter2_out2                : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Data_Sorter5_out1                : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Data_Sorter5_out2                : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Data_Sorter8_out1                : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Data_Sorter8_out2                : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Delay5_out1                      : unsigned(15 DOWNTO 0);  -- ufix16_En27
  SIGNAL Delay6_out1                      : unsigned(15 DOWNTO 0);  -- ufix16_En27
  SIGNAL Data_Sorter3_out1                : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Data_Sorter3_out2                : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Data_Sorter6_out1                : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Data_Sorter6_out2                : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Data_Sorter9_out1                : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Data_Sorter9_out2                : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Data_Sorter12_out1               : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Data_Sorter12_out2               : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Data_Sorter15_out1               : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Delay7_out1                      : unsigned(15 DOWNTO 0);  -- ufix16_En27
  SIGNAL Delay8_out1                      : unsigned(15 DOWNTO 0);  -- ufix16_En27
  SIGNAL Data_Sorter4_out1                : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Data_Sorter4_out2                : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Data_Sorter7_out1                : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Data_Sorter7_out2                : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Data_Sorter10_out1               : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Data_Sorter10_out2               : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Data_Sorter13_out1               : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Data_Sorter13_out2               : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Data_Sorter16_out1               : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Data_Sorter16_out2               : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Data_Sorter19_out1               : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Data_Sorter11_out1               : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Data_Sorter11_out2               : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Data_Sorter14_out1               : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Data_Sorter14_out2               : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Data_Sorter17_out1               : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Data_Sorter17_out2               : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Data_Sorter20_out1               : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Data_Sorter20_out2               : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Data_Sorter22_out1               : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Data_Sorter18_out1               : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Data_Sorter21_out1               : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Data_Sorter23_out1               : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Data_Sorter24_out1               : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Data_Sorter24_out2               : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Data_Sorter24_out1_unsigned      : unsigned(15 DOWNTO 0);  -- ufix16_En27
  SIGNAL Data_Sorter24_out2_unsigned      : unsigned(15 DOWNTO 0);  -- ufix16_En27
  SIGNAL Add_add_cast                     : unsigned(15 DOWNTO 0);  -- ufix16_En26
  SIGNAL Add_add_cast_1                   : unsigned(15 DOWNTO 0);  -- ufix16_En26
  SIGNAL Add_out1                         : unsigned(15 DOWNTO 0);  -- ufix16_En26
  SIGNAL Delay1_out1                      : unsigned(15 DOWNTO 0);  -- ufix16_En26
  SIGNAL Gain_cast                        : unsigned(31 DOWNTO 0);  -- ufix32_En42
  SIGNAL Gain_out1                        : unsigned(15 DOWNTO 0);  -- ufix16_En27
  SIGNAL Delay_out1                       : unsigned(15 DOWNTO 0);  -- ufix16_En27

  ATTRIBUTE multstyle : string;

BEGIN
  u_Data_Sorter1 : Data_Sorter1
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              Signal1 => Signal_w3,  -- ufix16_En27
              Signal2 => std_logic_vector(Delay2_out1),  -- ufix16_En27
              High_Data => Data_Sorter1_out1,  -- ufix16_En27
              Low_Data => Data_Sorter1_out2  -- ufix16_En27
              );

  u_Data_Sorter2 : Data_Sorter2
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              Signal1 => std_logic_vector(Delay3_out1),  -- ufix16_En27
              Signal2 => std_logic_vector(Delay4_out1),  -- ufix16_En27
              High_Data => Data_Sorter2_out1,  -- ufix16_En27
              Low_Data => Data_Sorter2_out2  -- ufix16_En27
              );

  u_Data_Sorter5 : Data_Sorter5
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              Signal1 => Data_Sorter1_out2,  -- ufix16_En27
              Signal2 => Data_Sorter2_out1,  -- ufix16_En27
              High_Data => Data_Sorter5_out1,  -- ufix16_En27
              Low_Data => Data_Sorter5_out2  -- ufix16_En27
              );

  u_Data_Sorter8 : Data_Sorter8
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              Signal1 => Data_Sorter1_out1,  -- ufix16_En27
              Signal2 => Data_Sorter5_out1,  -- ufix16_En27
              High_Data => Data_Sorter8_out1,  -- ufix16_En27
              Low_Data => Data_Sorter8_out2  -- ufix16_En27
              );

  u_Data_Sorter3 : Data_Sorter3
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              Signal1 => std_logic_vector(Delay5_out1),  -- ufix16_En27
              Signal2 => std_logic_vector(Delay6_out1),  -- ufix16_En27
              High_Data => Data_Sorter3_out1,  -- ufix16_En27
              Low_Data => Data_Sorter3_out2  -- ufix16_En27
              );

  u_Data_Sorter6 : Data_Sorter6
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              Signal1 => Data_Sorter2_out2,  -- ufix16_En27
              Signal2 => Data_Sorter3_out1,  -- ufix16_En27
              High_Data => Data_Sorter6_out1,  -- ufix16_En27
              Low_Data => Data_Sorter6_out2  -- ufix16_En27
              );

  u_Data_Sorter9 : Data_Sorter9
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              Signal1 => Data_Sorter5_out2,  -- ufix16_En27
              Signal2 => Data_Sorter6_out1,  -- ufix16_En27
              High_Data => Data_Sorter9_out1,  -- ufix16_En27
              Low_Data => Data_Sorter9_out2  -- ufix16_En27
              );

  u_Data_Sorter12 : Data_Sorter12
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              Signal1 => Data_Sorter8_out2,  -- ufix16_En27
              Signal2 => Data_Sorter9_out1,  -- ufix16_En27
              High_Data => Data_Sorter12_out1,  -- ufix16_En27
              Low_Data => Data_Sorter12_out2  -- ufix16_En27
              );

  u_Data_Sorter15 : Data_Sorter15
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              Signal1 => Data_Sorter8_out1,  -- ufix16_En27
              Signal2 => Data_Sorter12_out1,  -- ufix16_En27
              Low_Data => Data_Sorter15_out1  -- ufix16_En27
              );

  u_Data_Sorter4 : Data_Sorter4
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              Signal1 => std_logic_vector(Delay7_out1),  -- ufix16_En27
              Signal2 => std_logic_vector(Delay8_out1),  -- ufix16_En27
              High_Data => Data_Sorter4_out1,  -- ufix16_En27
              Low_Data => Data_Sorter4_out2  -- ufix16_En27
              );

  u_Data_Sorter7 : Data_Sorter7
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              Signal1 => Data_Sorter3_out2,  -- ufix16_En27
              Signal2 => Data_Sorter4_out1,  -- ufix16_En27
              High_Data => Data_Sorter7_out1,  -- ufix16_En27
              Low_Data => Data_Sorter7_out2  -- ufix16_En27
              );

  u_Data_Sorter10 : Data_Sorter10
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              Signal1 => Data_Sorter6_out2,  -- ufix16_En27
              Signal2 => Data_Sorter7_out1,  -- ufix16_En27
              High_Data => Data_Sorter10_out1,  -- ufix16_En27
              Low_Data => Data_Sorter10_out2  -- ufix16_En27
              );

  u_Data_Sorter13 : Data_Sorter13
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              Signal1 => Data_Sorter9_out2,  -- ufix16_En27
              Signal2 => Data_Sorter10_out1,  -- ufix16_En27
              High_Data => Data_Sorter13_out1,  -- ufix16_En27
              Low_Data => Data_Sorter13_out2  -- ufix16_En27
              );

  u_Data_Sorter16 : Data_Sorter16
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              Signal1 => Data_Sorter12_out2,  -- ufix16_En27
              Signal2 => Data_Sorter13_out1,  -- ufix16_En27
              High_Data => Data_Sorter16_out1,  -- ufix16_En27
              Low_Data => Data_Sorter16_out2  -- ufix16_En27
              );

  u_Data_Sorter19 : Data_Sorter19
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              Signal1 => Data_Sorter15_out1,  -- ufix16_En27
              Signal2 => Data_Sorter16_out1,  -- ufix16_En27
              Low_Data => Data_Sorter19_out1  -- ufix16_En27
              );

  u_Data_Sorter11 : Data_Sorter11
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              Signal1 => Data_Sorter7_out2,  -- ufix16_En27
              Signal2 => Data_Sorter4_out2,  -- ufix16_En27
              High_Data => Data_Sorter11_out1,  -- ufix16_En27
              Low_Data => Data_Sorter11_out2  -- ufix16_En27
              );

  u_Data_Sorter14 : Data_Sorter14
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              Signal1 => Data_Sorter10_out2,  -- ufix16_En27
              Signal2 => Data_Sorter11_out1,  -- ufix16_En27
              High_Data => Data_Sorter14_out1,  -- ufix16_En27
              Low_Data => Data_Sorter14_out2  -- ufix16_En27
              );

  u_Data_Sorter17 : Data_Sorter17
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              Signal1 => Data_Sorter13_out2,  -- ufix16_En27
              Signal2 => Data_Sorter14_out1,  -- ufix16_En27
              High_Data => Data_Sorter17_out1,  -- ufix16_En27
              Low_Data => Data_Sorter17_out2  -- ufix16_En27
              );

  u_Data_Sorter20 : Data_Sorter20
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              Signal1 => Data_Sorter16_out2,  -- ufix16_En27
              Signal2 => Data_Sorter17_out1,  -- ufix16_En27
              High_Data => Data_Sorter20_out1,  -- ufix16_En27
              Low_Data => Data_Sorter20_out2  -- ufix16_En27
              );

  u_Data_Sorter22 : Data_Sorter22
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              Signal1 => Data_Sorter19_out1,  -- ufix16_En27
              Signal2 => Data_Sorter20_out1,  -- ufix16_En27
              Low_Data => Data_Sorter22_out1  -- ufix16_En27
              );

  u_Data_Sorter18 : Data_Sorter18
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              Signal1 => Data_Sorter14_out2,  -- ufix16_En27
              Signal2 => Data_Sorter11_out2,  -- ufix16_En27
              High_Data => Data_Sorter18_out1  -- ufix16_En27
              );

  u_Data_Sorter21 : Data_Sorter21
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              Signal1 => Data_Sorter17_out2,  -- ufix16_En27
              Signal2 => Data_Sorter18_out1,  -- ufix16_En27
              High_Data => Data_Sorter21_out1  -- ufix16_En27
              );

  u_Data_Sorter23 : Data_Sorter23
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              Signal1 => Data_Sorter20_out2,  -- ufix16_En27
              Signal2 => Data_Sorter21_out1,  -- ufix16_En27
              High_Data => Data_Sorter23_out1  -- ufix16_En27
              );

  u_Data_Sorter24 : Data_Sorter24
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              Signal1 => Data_Sorter22_out1,  -- ufix16_En27
              Signal2 => Data_Sorter23_out1,  -- ufix16_En27
              High_Data => Data_Sorter24_out1,  -- ufix16_En27
              Low_Data => Data_Sorter24_out2  -- ufix16_En27
              );

  Signal_w3_unsigned <= unsigned(Signal_w3);

  Delay2_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay2_out1 <= to_unsigned(16#0000#, 16);
      ELSIF enb = '1' THEN
        Delay2_out1 <= Signal_w3_unsigned;
      END IF;
    END IF;
  END PROCESS Delay2_process;


  Delay3_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay3_out1 <= to_unsigned(16#0000#, 16);
      ELSIF enb = '1' THEN
        Delay3_out1 <= Delay2_out1;
      END IF;
    END IF;
  END PROCESS Delay3_process;


  Delay4_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay4_out1 <= to_unsigned(16#0000#, 16);
      ELSIF enb = '1' THEN
        Delay4_out1 <= Delay3_out1;
      END IF;
    END IF;
  END PROCESS Delay4_process;


  Delay5_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay5_out1 <= to_unsigned(16#0000#, 16);
      ELSIF enb = '1' THEN
        Delay5_out1 <= Delay4_out1;
      END IF;
    END IF;
  END PROCESS Delay5_process;


  Delay6_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay6_out1 <= to_unsigned(16#0000#, 16);
      ELSIF enb = '1' THEN
        Delay6_out1 <= Delay5_out1;
      END IF;
    END IF;
  END PROCESS Delay6_process;


  Delay7_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay7_out1 <= to_unsigned(16#0000#, 16);
      ELSIF enb = '1' THEN
        Delay7_out1 <= Delay6_out1;
      END IF;
    END IF;
  END PROCESS Delay7_process;


  Delay8_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay8_out1 <= to_unsigned(16#0000#, 16);
      ELSIF enb = '1' THEN
        Delay8_out1 <= Delay7_out1;
      END IF;
    END IF;
  END PROCESS Delay8_process;


  Data_Sorter24_out1_unsigned <= unsigned(Data_Sorter24_out1);

  Data_Sorter24_out2_unsigned <= unsigned(Data_Sorter24_out2);

  Add_add_cast <= resize(Data_Sorter24_out1_unsigned(15 DOWNTO 1), 16);
  Add_add_cast_1 <= resize(Data_Sorter24_out2_unsigned(15 DOWNTO 1), 16);
  Add_out1 <= Add_add_cast + Add_add_cast_1;

  Delay1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay1_out1 <= to_unsigned(16#0000#, 16);
      ELSIF enb = '1' THEN
        Delay1_out1 <= Add_out1;
      END IF;
    END IF;
  END PROCESS Delay1_process;


  Gain_cast <= resize(Delay1_out1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 32);
  Gain_out1 <= Gain_cast(30 DOWNTO 15);

  Delay_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay_out1 <= to_unsigned(16#0000#, 16);
      ELSIF enb = '1' THEN
        Delay_out1 <= Gain_out1;
      END IF;
    END IF;
  END PROCESS Delay_process;


  Median <= std_logic_vector(Delay_out1);

END rtl;

