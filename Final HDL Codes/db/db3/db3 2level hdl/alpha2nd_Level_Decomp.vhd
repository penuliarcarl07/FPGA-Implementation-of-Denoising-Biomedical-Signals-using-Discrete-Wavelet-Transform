-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\db3_2_Level_fixdt\alpha2nd_Level_Decomp.vhd
-- Created: 2024-04-17 21:48:34
-- 
-- Generated by MATLAB 9.10 and HDL Coder 3.18
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: alpha2nd_Level_Decomp
-- Source Path: db3_2_Level_fixdt/DWT_db3_2_Level/2nd_Level_Decomp
-- Hierarchy Level: 1
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY alpha2nd_Level_Decomp IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        In_E                              :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En23
        In_O                              :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En23
        Out_HiD                           :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En26
        Out_LoD                           :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En23
        );
END alpha2nd_Level_Decomp;


ARCHITECTURE rtl OF alpha2nd_Level_Decomp IS

  -- Component Declarations
  COMPONENT HiD_Even_block
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In_HiD_e                        :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En23
          Out_HiD_e                       :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En23
          );
  END COMPONENT;

  COMPONENT HiD_Odd_block
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In_HiD_o                        :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En23
          Out_HiD_o                       :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En23
          );
  END COMPONENT;

  COMPONENT LoD_Even_block
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In_LoD_e                        :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En23
          Out_LoD_e                       :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En23
          );
  END COMPONENT;

  COMPONENT LoD_Odd_block
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In_LoD_o                        :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En23
          Out_LoD_o                       :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En23
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : HiD_Even_block
    USE ENTITY work.HiD_Even_block(rtl);

  FOR ALL : HiD_Odd_block
    USE ENTITY work.HiD_Odd_block(rtl);

  FOR ALL : LoD_Even_block
    USE ENTITY work.LoD_Even_block(rtl);

  FOR ALL : LoD_Odd_block
    USE ENTITY work.LoD_Odd_block(rtl);

  -- Signals
  SIGNAL kconst                           : unsigned(15 DOWNTO 0);  -- ufix16_En16
  SIGNAL kconst_1                         : unsigned(15 DOWNTO 0);  -- ufix16_En16
  SIGNAL HiD_Even_out1                    : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL HiD_Even_out1_signed             : signed(15 DOWNTO 0);  -- sfix16_En23
  SIGNAL HiD_Odd_out1                     : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL HiD_Odd_out1_signed              : signed(15 DOWNTO 0);  -- sfix16_En23
  SIGNAL Add_add_temp                     : signed(15 DOWNTO 0);  -- sfix16_En23
  SIGNAL Add_out1                         : signed(15 DOWNTO 0);  -- sfix16_En26
  SIGNAL Add_out1_1                       : signed(15 DOWNTO 0);  -- sfix16_En26
  SIGNAL HiD_cast                         : signed(16 DOWNTO 0);  -- sfix17_En16
  SIGNAL HiD_mul_temp                     : signed(32 DOWNTO 0);  -- sfix33_En42
  SIGNAL HiD_cast_1                       : signed(31 DOWNTO 0);  -- sfix32_En42
  SIGNAL HiD_out1                         : signed(15 DOWNTO 0);  -- sfix16_En26
  SIGNAL HiD_out1_1                       : signed(15 DOWNTO 0);  -- sfix16_En26
  SIGNAL kconst_2                         : unsigned(15 DOWNTO 0);  -- ufix16_En16
  SIGNAL kconst_3                         : unsigned(15 DOWNTO 0);  -- ufix16_En16
  SIGNAL LoD_Even_out1                    : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL LoD_Even_out1_signed             : signed(15 DOWNTO 0);  -- sfix16_En23
  SIGNAL LoD_Odd_out1                     : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL LoD_Odd_out1_signed              : signed(15 DOWNTO 0);  -- sfix16_En23
  SIGNAL Add1_add_cast                    : signed(15 DOWNTO 0);  -- sfix16_En22
  SIGNAL Add1_add_cast_1                  : signed(15 DOWNTO 0);  -- sfix16_En22
  SIGNAL Add1_out1                        : signed(15 DOWNTO 0);  -- sfix16_En22
  SIGNAL Add1_out1_1                      : signed(15 DOWNTO 0);  -- sfix16_En22
  SIGNAL LoD_cast                         : signed(16 DOWNTO 0);  -- sfix17_En16
  SIGNAL LoD_mul_temp                     : signed(32 DOWNTO 0);  -- sfix33_En38
  SIGNAL LoD_cast_1                       : signed(31 DOWNTO 0);  -- sfix32_En38
  SIGNAL LoD_out1                         : signed(15 DOWNTO 0);  -- sfix16_En23
  SIGNAL LoD_out1_1                       : signed(15 DOWNTO 0);  -- sfix16_En23

  ATTRIBUTE multstyle : string;

BEGIN
  u_HiD_Even : HiD_Even_block
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In_HiD_e => In_E,  -- sfix16_En23
              Out_HiD_e => HiD_Even_out1  -- sfix16_En23
              );

  u_HiD_Odd : HiD_Odd_block
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In_HiD_o => In_O,  -- sfix16_En23
              Out_HiD_o => HiD_Odd_out1  -- sfix16_En23
              );

  u_LoD_Even : LoD_Even_block
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In_LoD_e => In_E,  -- sfix16_En23
              Out_LoD_e => LoD_Even_out1  -- sfix16_En23
              );

  u_LoD_Odd : LoD_Odd_block
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In_LoD_o => In_O,  -- sfix16_En23
              Out_LoD_o => LoD_Odd_out1  -- sfix16_En23
              );

  kconst <= to_unsigned(16#89FF#, 16);

  HwModeRegister_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        kconst_1 <= to_unsigned(16#0000#, 16);
      ELSIF enb = '1' THEN
        kconst_1 <= kconst;
      END IF;
    END IF;
  END PROCESS HwModeRegister_process;


  HiD_Even_out1_signed <= signed(HiD_Even_out1);

  HiD_Odd_out1_signed <= signed(HiD_Odd_out1);

  Add_add_temp <= HiD_Even_out1_signed + HiD_Odd_out1_signed;
  Add_out1 <= Add_add_temp(12 DOWNTO 0) & '0' & '0' & '0';

  HwModeRegister1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Add_out1_1 <= to_signed(16#0000#, 16);
      ELSIF enb = '1' THEN
        Add_out1_1 <= Add_out1;
      END IF;
    END IF;
  END PROCESS HwModeRegister1_process;


  HiD_cast <= signed(resize(kconst_1, 17));
  HiD_mul_temp <= HiD_cast * Add_out1_1;
  HiD_cast_1 <= HiD_mul_temp(31 DOWNTO 0);
  HiD_out1 <= HiD_cast_1(31 DOWNTO 16);

  PipelineRegister_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        HiD_out1_1 <= to_signed(16#0000#, 16);
      ELSIF enb = '1' THEN
        HiD_out1_1 <= HiD_out1;
      END IF;
    END IF;
  END PROCESS PipelineRegister_process;


  Out_HiD <= std_logic_vector(HiD_out1_1);

  kconst_2 <= to_unsigned(16#89FF#, 16);

  HwModeRegister2_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        kconst_3 <= to_unsigned(16#0000#, 16);
      ELSIF enb = '1' THEN
        kconst_3 <= kconst_2;
      END IF;
    END IF;
  END PROCESS HwModeRegister2_process;


  LoD_Even_out1_signed <= signed(LoD_Even_out1);

  LoD_Odd_out1_signed <= signed(LoD_Odd_out1);

  Add1_add_cast <= resize(LoD_Even_out1_signed(15 DOWNTO 1), 16);
  Add1_add_cast_1 <= resize(LoD_Odd_out1_signed(15 DOWNTO 1), 16);
  Add1_out1 <= Add1_add_cast + Add1_add_cast_1;

  HwModeRegister3_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Add1_out1_1 <= to_signed(16#0000#, 16);
      ELSIF enb = '1' THEN
        Add1_out1_1 <= Add1_out1;
      END IF;
    END IF;
  END PROCESS HwModeRegister3_process;


  LoD_cast <= signed(resize(kconst_3, 17));
  LoD_mul_temp <= LoD_cast * Add1_out1_1;
  LoD_cast_1 <= LoD_mul_temp(31 DOWNTO 0);
  LoD_out1 <= LoD_cast_1(30 DOWNTO 15);

  PipelineRegister1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        LoD_out1_1 <= to_signed(16#0000#, 16);
      ELSIF enb = '1' THEN
        LoD_out1_1 <= LoD_out1;
      END IF;
    END IF;
  END PROCESS PipelineRegister1_process;


  Out_LoD <= std_logic_vector(LoD_out1_1);

END rtl;

